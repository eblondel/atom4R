# Build

name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: R ${{ matrix.config.r }} | ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,    r: 'release'}
          - {os: windows-latest,  r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      PKG_SYSREQS: false

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-pandoc@v2

      #Integration tests
      #-------------------------
      #Dataverse set-up
      #- name: Set up DataVerse
      #  run: |
      #    cd ..
      #    git clone https://github.com/IQSS/dataverse-docker
      #    cd dataverse-docker
      #    bash ./initial.bash
      #    docker network create traefik
      #    docker-compose build
      #    docker-compose -f docker-compose-local.yml up -d
      #    docker ps
      #    cd ${GITHUB_WORKSPACE}
      #R Tests
      #--------------------------
      #R Set-up
      - name: Set up R ${{ matrix.config.r }}
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true
      #Install dependencies on Linux
      - name: Install dependencies on Linux
        if: runner.os == 'Linux'
        run: sudo apt-get install -y make libsodium-dev libicu-dev libxml2-dev libssl-dev pandoc librdf0-dev libnode-dev libcurl4-gnutls-dev
      #Install dependencies
      - name: Install dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck, any::XML
          needs: check
      #Check R Package
      - name: Check R package
        uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
          artifact-name: atom4R_r-${{ matrix.config.r }}_${{ matrix.config.os }}-results
